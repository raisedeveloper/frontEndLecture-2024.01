자바스크립트

'작은 따옴표'
"큰 따옴표"
'template literal'

let 은 변수, 변수를 만들어서 개발자가 원하는 값으로 맞춤

ctrl+shift+I

console 에서 javascript 프로그램이 돈다

오해를 많이 받지만 각광을 받는 어플리케이션에 많이 사용되는 언어
2008년 9년 구글 크롬 발표
2009.01 이후 자바스크립트 웹 브라우저가 아닌 곳에서도 사용할 수 있는 표준안 제시
commonJS표준 발표 이후 V8 엔진과 같이 사용
C language 잘하는 사람은 잘할 수 있는 여건이 됨

비동기적인 방식
top down으로 흘러감
함수1() 호출
함수2() 호출
함수3() 호출
통상적으로 동기적(다른 일을 못하고 하나만 가능)으로 흘러감
자바스크립트는 I/O가 걸려잇는 함수들 (파일 엑세스 다른 서버랑 커뮤니케이션 디비 엑세스한다던지)
동시 다발적, 어떤게 먼저 끝날지는 모르는게 자바스크립트 ??????????I/O가 뭐지?
효율적임 하지만 비동기적이라 프로그램만들기 어려움
탑다운을 방지하기 위해서 자바스크립트는 콜백을 써서 함수1안에 함수 2를 넣고 함수 3를 써서 입력함
어띤크 어웨이크 위에서 아래로 흐르는 것처럼 만들 수 있음 처음하는 사람은 난해함
a think awake

javascript로 백앤드를 하려면 promise화 시키는 것을 자바스크립트의 핵심 기술임
core tech임

thread : 효율적인 비동기 방식으로 장보기를 프로그래밍 언어로 구현하는 방법
node.js 모든 모듈 라이브러리 처음부터 비동기 기반의 프로그램을 만들 수 있도록 설계되어 초보자도 쉽게 프로그램을 만들 수 있음

thread를 maximum으로 활용해야하기 때문에 게임만드는 것이 힘든것임
-> 코드가 어려워짐

2.자바스크립트로 할 수 있는 일

웹 클라이언트 애플리케이션 개발
애플리케이션 개발 목적

웹 서버 개발

2가지 이상의 언어가 사용

모바일 애플리케이션
네이티브 애플리케이션
페이스북의 리액트 내이티브

데스크톱 애플리케이션 개발 
electron모듈

데이터베이스 관리


2.프로그래밍 입문

목표

자바스크립트 기본 용어 이해
기본 출력방법
자료 변수 상수 함수
자료형 변환 방법



자료형
1. 컴퓨터는 2진수로 사용함 (all things)
때에 따라 숫자 문자로 읽는 작업을 함
so, 구분을 위해서 자료형이라는 것을 사용함
0x41 = A (16진수)
0100 0001 (10진수) = 64 + 1 = 65(정수) => 문자열로 읽으면 A가 됨
컴퓨터가 어떻게 해석할 것인가에 따라서 내용이 달라짐
데이타 타입이라는 자료형이 생김
자바스크립트는 타입이 없다
니가 쓰는데로 맞춰서 해주겠다 -> 자바스크립트
이러한 랭귀지가 사용은 쉬운데 실제로 프로그램 실행 순간에 예상하지 못한 문제 발생함
so, 자바스크립트의 자유분방함을 진정시키는 type script가 나옴

2. 풀스텍 calss
강의장 밖에서 반을 물으면 풀스텍 반이요라고 대답할 수 있음 
=> 이 말은, 카테고리를 묶어줌 = 데이타 하나가 아니라 데이터 여러개를 묶어줌
묶음의 프로그래밍을 잘해야함
데이타가 개별적으로 있는 것은 어렵지 않음
계산기와 다를바 없음

묶음의 데이터를 활용해서 어떻게 프로그래밍 할것인가가 중요함!! 이것을 잘해야함!!


모듈로가 로직의 아주 중요한 역할
어떤 식에서 3의 배수를 찾으라고 할 때
3의 배수가 모듈러 3을 한 것의 나머지가 0이면 됨
짝수를 찾으라고 하면 모듈로로 2로 나눠서 나머지가 1인 것을 찾으면 됨

cls clear script
정리하다 (cmd 에서 썼던거 다 지워줌)


바이트 쇼트 인트 롱 싱글 더블 6개 타입이 자바스크립트에서는 하나로 쓰임

자바를 해서 엄격한 사람들은 자바스크립트 랭귀지

자바 스크립트: 엔진이 하나하나 해석해서 실행

자바: 전부다 기계어로 프로그램을 만들어놓고 한번에 실행



2. 문자

alt+shift+a = 주석 /**/ 여러줄에 걸친 주석
한줄 주석 //


console.log("he said \"I love you.\""); 문자열 escaping을 피하는 법

let hello = '안녕하세요?';
console.log(hello[0], hello[2], hello[5]);      //안 하 ?


문자와 숫자 부호를 같이 사용하는 일이 자주 있을 것

// template literal
let a = 2, b = 3;
console.log(a, '더하기', b, '은', 2 + 3, '입니다');
console.log(`${a} 더하기 ${b}은 ${a+b} 입니다.`);

=> 템플릿 리터럴의 장점
쉼표를 계속해서 찍는 불편함을 해소해줌.
so, 공식을 만들어 사용함.

console.log(`올해는 ${new Date().getFullYear()}년입니다.`);

명령프롬프트 내에서 실행되는 화면 (이하)

C:\workspace\WebProject\03.javascript\ch02.기본>node 03.자료형.js
he said "I love you."
I'll be back.
he said "I love you."
Back slash(\) 기호를 사용할 때에는 \ 두개를 쓰면 됩니다.
안 하 ?
2 더하기 3 은 5 입니다
2 더하기 3은 5 입니다.
올해는 2024년입니다.




getFullYear도 작명할 때 약속임
단어를 두개를 붙여함
하나로 만들기 위해서
1. snake style
full_year 뱀이 기어가는 것을 형상화 (파이썬)

2. 자바 , 자바 스크립트
FullYear 막타 canal case

게터 섹터
getter sector 값을 가지고 오고 싶으면 method나 getter를 써서 가져옴


identifire
아이덴티 파이어(식별자)는 소문자로 시작함 (통상적으로)
대문자 딱 하나 Class만 대문자로 시작함


















