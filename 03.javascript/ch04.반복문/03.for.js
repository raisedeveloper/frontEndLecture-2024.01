//for - 반복문
//1에서 100까지 합 구하기
let sum = 0;
for(let i = 1; i <= 1000; i++) {
    sum +=i; //sum에다 i값을 더해준다
}
console.log(`1에서 1000까지 합은 ${sum}`);

// 1에서 1000까지 홀수 합 구하기, 프로그램이 2씩 증가시키도록 하면 됨
let oddsum = 0;
for(let i = 1; i <= 1000; i+= 2) { //let i를 인덱스 값이라고 한다. 처음 시작하는 값을 의미. 1000까지 셀거다; 한 번 셀 때마다 2씩 올려서 샐꺼다.
    oddsum += i;                       // 인덱스 값은 책갈피. 거기서 부터 시작할거니까. ; 세미콜론은 문장을 끝낼때 쓰는 온점과 같다. 코딩에서는. 아래까지 이어진다고 생각해서 오류남.
}
console.log(`1에서 1000까지 홀수의 합은 ${oddsum}`);

let evenSum = 0;
for(let i = 2; i <= 1000; i += 2) { // i <= 1000 몇 번 반복할거냐 횟수를 말해라!!!! / 관계 연산자 부등호 <= i보다 크거나 같아질때까지 for문이 돌아갈거다!!
    evenSum += i;                   // i <= 1000 i가 1000보다 그 수의 관계없이 커지면 이 for문에서 탈출 하겠다. 나가겠다. escape!!!  
}                                   //  'i += 2' = 2페이지씩 뛰어 읽을거다. 그래서 for문이 반복문이다!!!!!
console.log(`1에서 100까지 짝수의 합은 ${evenSum}`);

//1에서 10까지 곱 구하기
let product = 1;
for(let i = 1; i <= 10; i++) {
    product *= i; //i를 곱해서 넣어줄거다. product라는 변수에 곱한 값을 넣어줄거다. i를 곱해서 넣어줄거다 이말이여!!

}
console.log(`1에서 10까지 곱은 ${product}`);

// array의 요소 출력
// element1, element2, ....
let fruits = ['사과', '감', '귤', '배']; //배열은 큰 바구니임 순서대로 차곡차곡 넣어놓은 상태임 이거를 하나씩 다 꺼내고 싶어. for문으로 쓰면 //줄바꿈을 안하는 게 좋다
let fruitStr = '';                      //fruit String의 약자 (이하 처럼 하면 됨)
for (let fruit of fruits) { //enhanced for문 = 향상된 for문 _ 반복 노가다를 안하려고 for문을 쓰는데 단순한 반복 작업에 특화되도록 향상된 for문인 enhanced for문을 사용해준거다.
    fruitStr += fruit + ', '; // fruitStr 과일 문장에 fruit의 단어를 넣을거다.+ ', '; 간격 띄우려고 써놓은 것
} //단순반복에 특화된 인핸스드 포문
console.log(fruitStr);

let desk = ''; //책상위에 무언가를 ''; 이 빈칸에 올릴거에요 단, 단어나 문자일 경우에만 ''요고를 씁니다.
for (let i = 0; i <= fruits.length; i++) { // i <= 4 이렇게 하면 순서가 정해지지 않는다. 그래서 fruits라는 배열에서.length (배열의 길이만큼)이라는 뜻을 가진 메소드 (함수)를 쓴다. 
   //for 문을 왜썻냐? = fruits라는 바구니에서 책상위에 과일을 하나씩 올릴거니까!! 컴퓨터는 2진수로 세팅된거라서 항상 count를 0에서부터 시작하니까 0썼고요.
    desk += fruits[i]; // 데스크 위에 fruits를 [i]번째 과일을 데스크에 더해서( + )=( = )올리겠다. 
    //index값이 어짜ㅠㅣ 0에서부터 과일길이만큼 진행될거니까 그니까 어짜피 배열에서 하나씩 순서대로 꺼낼건데 
    //index도 (0)첨부터 시작하고 나도 0번째에 있는 과일부터 꺼낼거야. 근데 그게 바구니안에 들어있는 갯수만큼 할거야. 
    //즉, 이 바구니 안에 있는 과일 다 꺼낼거야.
}